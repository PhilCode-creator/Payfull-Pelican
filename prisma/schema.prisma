// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  username      String
  usernameLower String    @unique
  firstName     String
  lastName      String
  email         String    @unique
  passwordHash  String
  emailVerified Boolean   @default(false)
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  lastLogin     DateTime?
  isBanned      Boolean   @default(false)
  deletedAt     DateTime?
  adress        String?
  sessions      Session[]

  @@index([username])
}

model Session {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime
  expired   Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([expired])
}

model Log {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  action    String
  userId    String?  @db.ObjectId
  timestamp DateTime @default(now())
  details   String?
  ipAddress String?
}

enum Role {
  USER
  ADMIN
}
